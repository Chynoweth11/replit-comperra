// === schema-loader.ts ===
export const filterSchema = {
  Tile: [
    "Size", "Finish", "PEI Rating", "DCOF / Slip Resistance",
    "Water Absorption", "Edge Type", "Installation Method",
    "Surface Texture", "Color", "Country of Origin",
    "Material Type", "Suitable Applications"
  ],
  Hardwood: [
    "Wood Species", "Solid/Engineered", "Finish Type", "Texture",
    "Plank Size", "Thickness", "Install Method", "Color/Stain",
    "Country of Origin"
  ],
  Stone: [
    "Material Type", "Slab Size", "Thickness", "Finish",
    "Edge Options", "Surface Treatment", "Color/Pattern",
    "Application", "Price per Sq. Ft"
  ],
  Carpet: [
    "Fiber Type", "Pile Height", "Stain Resistance",
    "Traffic Rating", "Carpet Style", "Backing", "Color",
    "Width", "Install Method", "IAQ Certification"
  ],
  Heating: [
    "Type", "Voltage", "Coverage Area (sq ft)",
    "Programmable Features", "Sensor Type", "Max Temperature",
    "Thermostat Included?", "Install Location"
  ],
  Vinyl: [
    "Size", "Wear Layer", "Core Type", "Waterproof?",
    "Install Type", "Texture", "Finish Type", "Material Composition",
    "Commercial Grade?", "Country of Origin"
  ]
};

// === FilterPanel.tsx ===
import React from "react";

interface FilterPanelProps {
  filters: string[];
  onFiltersChange: (filters: Record<string, string>) => void;
}

const FilterPanel: React.FC<FilterPanelProps> = ({ filters, onFiltersChange }) => {
  const handleChange = (e: React.ChangeEvent<HTMLInputElement>, name: string) => {
    onFiltersChange({ [name]: e.target.value });
  };

  return (
    <div className="bg-white rounded-md shadow p-4 w-full lg:w-1/3">
      <h2 className="text-lg font-semibold mb-4">Filter By</h2>
      {filters.map((filter) => (
        <div key={filter} className="mb-4">
          <label className="block text-sm font-medium text-gray-700">{filter}</label>
          <input
            type="text"
            className="mt-1 block w-full border border-gray-300 rounded px-3 py-2"
            placeholder={`Enter ${filter}`}
            onChange={(e) => handleChange(e, filter)}
          />
        </div>
      ))}
    </div>
  );
};

export default FilterPanel;

// === comparison.tsx (Snippet for Usage) ===
import { filterSchema } from '../utils/schema-loader';
import FilterPanel from '../components/FilterPanel';

const ComparisonPage = () => {
  const [category, setCategory] = React.useState("Tile"); // Detect this dynamically
  const [filters, setFilters] = React.useState<Record<string, string>>({});

  return (
    <div className="flex flex-col lg:flex-row gap-6">
      <FilterPanel
        filters={filterSchema[category] || []}
        onFiltersChange={(newFilter) => setFilters({ ...filters, ...newFilter })}
      />

      <div className="flex-grow">
        {/* Comparison table logic here */}
      </div>
    </div>
  );
};

export default ComparisonPage;
