// === server.js ===
require('dotenv').config();
const express = require('express');
const axios = require('axios');
const cheerio = require('cheerio');
const cors = require('cors');
const app = express();

app.use(cors());
app.use(express.json());

const clean = (text) => text?.replace(/\s+/g, ' ').trim();

const scrapeMSIProduct = async (url) => {
  const { data: html } = await axios.get(url);
  const $ = cheerio.load(html);

  const title = clean($('h1').text());
  const image = $('.carousel-item img').first().attr('src') || $('.product-image img').first().attr('src');
  const fullImage = image?.startsWith('http') ? image : `https://www.msisurfaces.com${image}`;

  const attributes = {};
  $('ul.list-unstyled li, .tab-content li, table tr').each((i, el) => {
    const label = clean($(el).find('strong').text() || $(el).find('th').text());
    const value = clean($(el).find('td').text() || $(el).text().replace(label, ''));

    if (label.toLowerCase().includes('finish')) attributes.finish = value;
    if (label.toLowerCase().includes('size') || label.toLowerCase().includes('dimension')) attributes.dimensions = value;
    if (label.toLowerCase().includes('pei')) attributes.pei_rating = value;
    if (label.toLowerCase().includes('shade')) attributes.shade_variation = value;
    if (label.toLowerCase().includes('color')) attributes.color = value;
    if (label.toLowerCase().includes('application') || label.toLowerCase().includes('usage')) attributes.applications = value;
    if (label.toLowerCase().includes('material')) attributes.material_type = value;
    if (label.toLowerCase().includes('thickness')) attributes.thickness = value;
    if (label.toLowerCase().includes('coverage') || label.toLowerCase().includes('sq ft')) attributes.coverage = value;
  });

  const description = clean($('.product-intro p').first().text());

  return {
    url,
    title,
    image: fullImage,
    description,
    brand: 'MSI',
    category: 'Tile',
    ...attributes
  };
};

app.post('/api/scrape-msi', async (req, res) => {
  const { url } = req.body;
  if (!url || !url.includes('msisurfaces.com')) {
    return res.status(400).json({ error: 'Invalid MSI URL' });
  }

  try {
    const data = await scrapeMSIProduct(url);
    res.json({ success: true, data });
  } catch (err) {
    console.error(err.message);
    res.status(500).json({ error: 'Scraping failed' });
  }
});

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`âœ… MSI Scraper running on port ${PORT}`));
